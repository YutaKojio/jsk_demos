<launch>
  <arg name="INPUT_IMAGE" default="/multisense_local/left/image_rect_color"/>
  <arg name="INPUT_CAMERA_INFO" default="/multisense_local/left/camera_info"/>
  <arg name="INPUT_POINT_CLOUD" default="/multisense_local/resize_1_4/points" />
  <arg name="DEBUG" default="false" />
  <arg name="MANAGER" default="nodelet_manager" />
  <group ns="valve_recognition">
    <node name="$(arg MANAGER)"
          pkg="nodelet" type="nodelet" args="manager" />
    <node pkg="image_view2" type="image_view2" name="image_view2" if="$(arg DEBUG)">
      <remap from="image" to="$(arg INPUT_IMAGE)" />
      <remap from="$(arg INPUT_IMAGE)/screenrectangle" to="input_rect" />
    </node>
    <node pkg="jsk_topic_tools"
          type="standalone_complexed_nodelet"
          name="valve_manager" 
          output="screen">
          <rosparam subst_value ="true">
          nodelets:
            - name: rect_to_mask_image
              type: jsk_perception/RectToMaskImage
              remappings:
                - from: ~input
                  to: input_rect
                - from: ~input/camera_info
                  to: $(arg INPUT_CAMERA_INFO)
            - name: mask_image_filter
              type: jsk_pcl/MaskImageFilter
              remappings:
                - from: ~input
                  to: $(arg INPUT_POINT_CLOUD)
                - from: ~input/mask
                  to: rect_to_mask_image/output
                - from: ~input/camera_info
                  to: $(arg INPUT_CAMERA_INFO)
            - name: filtered_cloud
              type: pcl/ExtractIndices
              remappings:
                - from: ~input
                  to: $(arg INPUT_POINT_CLOUD)
                - from: ~indices
                  to: mask_image_filter/output
            - name: normal_estimation
              type: jsk_pcl/NormalEstimationOMP
              remappings:
                - from: ~input
                  to: filtered_cloud/output
                - from: ~indices
                  to: mask_image_filter/output
            - name: normal_direction_filter
              type: jsk_pcl/NormalDirectionFilter
              remappings:
                - from: ~input
                  to: normal_estimation/output_with_xyz
                - from: ~input_imu
                  to: /multisense/imu/imu_data
            - name: filtered_points
              type: pcl/ExtractIndices
              remappings:
                - from: ~input
                  to: normal_estimation/output_with_xyz
                - from: ~indices
                  to: normal_direction_filter/output
            - name: euclidean_clustering
              type: jsk_pcl/EuclideanClustering
              remappings:
                - from: ~input
                  to: filtered_points/output
            - name: cluster_decomposer
              type: jsk_pcl/ClusterPointIndicesDecomposer
              remappings:
                - from: ~input
                  to: filtered_points/output
                - from: ~target
                  to: euclidean_clustering/output
            - name: nearest_cluster_cloud
              type: pcl/ExtractIndices
              remappings:
                - from: ~input
                  to: filtered_points/output
                - from: ~indices
                  to: nearest_cluster/output/indices
            - name: valve_finder
              type: jsk_pcl/TorusFinder
              remappings:
                - from: ~input
                  to: nearest_cluster_cloud/output
            - name: snapshot
              type: jsk_topic_tools/Snapshot
              remappings:
                - from: ~input
                  to: valve_finder/output
          </rosparam>
    </node>

    <group ns="cluster_decomposer" >
      <rosparam>
        align_boxes: true
        align_boxes_with_plane: false
        target_frame_id: map
      </rosparam>
    </group>

     <group ns="normal_estimation" >
      <rosparam>
        k_search: 0
        radius_search: 0.05
      </rosparam>
    </group>

    <group ns="normal_direction_filter">
      <rosparam>
        use_imu: true
        queue_size: 1000
        eps_angle: 0.5
        angle_offset: 1.57
      </rosparam>
    </group>

    <group ns="euclidean_clustering">
      <rosparam>
        tolerance: 0.05
      </rosparam>
    </group>

    <node name="walls"
          pkg="nodelet" type="nodelet"
          args="load jsk_pcl_utils/TfTransformBoundingBoxArray $(arg MANAGER)">
      <remap from="~input" to="cluster_decomposer/boxes" />
      <rosparam>
        target_frame_id: BODY
      </rosparam>
    </node>

    <node pkg="drc_task_common"
          type="nearest_box_indices.py"
          name="nearest_cluster">
      <remap from="~input/box_array" to="cluster_decomposer/boxes" />
      <remap from="~input/indices" to="euclidean_clustering/output" />
    </node>
    <group ns="nearest_cluster_cloud">
      <rosparam>
        max_queue_size: 100
      </rosparam>
    </group>
    
    <group ns="valve_finder">
      <rosparam>
        algorithm: RANSAC
        max_iterations: 1000
        min_radius: 0.03
        max_radius: 0.25
      </rosparam>
    </group>
    <group ns="snapshot">
      <rosparam>
        latch: true
      </rosparam>
    </group>
  </group>
</launch>
